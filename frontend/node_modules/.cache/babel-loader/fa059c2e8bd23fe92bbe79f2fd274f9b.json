{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/genral-blog/frontend/src/pages/create-post/createPost.jsx\";\nimport React, { useState } from \"react\";\nimport EditorComponent from \"../../components/editor/editor\";\nimport { convertToRaw } from \"draft-js\";\nimport axios from \"axios\";\nimport \"./create-post.scss\";\nimport { connect } from \"react-redux\";\nimport { tokenSelector } from \"../../redux/auth/auth.selector\";\nimport { addPost } from \"../../redux/posts/post.action\";\n\nfunction CreatePost({\n  token,\n  dispatch\n}) {\n  const [editorState, updateeditorState] = useState();\n  const [postForm, updatePostForm] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const onEditorStateChange = EditorState => {\n    const rawContentState = convertToRaw(EditorState.getCurrentContent());\n    updateeditorState(JSON.stringify(rawContentState));\n    console.log(editorState);\n  };\n\n  const {\n    title\n  } = postForm;\n\n  const formOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    updatePostForm(preval => {\n      return { ...preval,\n        [name]: value\n      };\n    });\n  };\n\n  const formOnSubmit = event => {\n    event.preventDefault();\n    const content = editorState;\n    const query = `mutation createPost($title: String! , $content: String!) {\n            createPost(title: $title ,  content: $content ){\n                _id\n                title\n                content\n                date\n                relatedComment{\n                  commentContent\n                  commentCreator{\n                    displayName\n                  }\n                }\n                postCreator{\n                  displayName\n                }\n              \n              \n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: JSON.stringify({\n        query,\n        variables: {\n          content,\n          title\n        }\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    }).then(res => {\n      console.log(res);\n      dispatch(addPost(res.data.data.createPost));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create_post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create_post_form\",\n    onSubmit: formOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \" title \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    onChange: formOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \" post content \"), /*#__PURE__*/React.createElement(EditorComponent, {\n    className: \"editor\",\n    onEditorStateChange: onEditorStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Add post\"))));\n}\n\nconst mapStateToProps = (state, ownprops) => ({\n  token: tokenSelector(state)\n});\n\nexport default connect(mapStateToProps)(CreatePost);","map":{"version":3,"sources":["/mnt/d/react&bac/genral-blog/frontend/src/pages/create-post/createPost.jsx"],"names":["React","useState","EditorComponent","convertToRaw","axios","connect","tokenSelector","addPost","CreatePost","token","dispatch","editorState","updateeditorState","postForm","updatePostForm","title","content","onEditorStateChange","EditorState","rawContentState","getCurrentContent","JSON","stringify","console","log","formOnChange","event","name","value","target","preval","formOnSubmit","preventDefault","query","url","method","data","variables","headers","Authorization","then","res","createPost","catch","err","mapStateToProps","state","ownprops"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport EditorComponent from \"../../components/editor/editor\";\nimport {  convertToRaw } from \"draft-js\";\nimport axios from \"axios\";\nimport \"./create-post.scss\";\nimport { connect } from \"react-redux\";\nimport { tokenSelector } from \"../../redux/auth/auth.selector\";\nimport { addPost } from \"../../redux/posts/post.action\";\nfunction CreatePost({ token, dispatch }) {\n  const [editorState, updateeditorState] = useState();\n  const [postForm, updatePostForm] = useState({ title: \"\", content: \"\" });\n  const onEditorStateChange = (EditorState) => {\n    const rawContentState = convertToRaw(EditorState.getCurrentContent());\n    updateeditorState(JSON.stringify(rawContentState));\n    console.log(editorState);\n  };\n\n  const { title } = postForm;\n  const formOnChange = (event) => {\n    const { name, value } = event.target;\n    updatePostForm((preval) => {\n      return { ...preval, [name]: value };\n    });\n  };\n  const formOnSubmit = (event) => {\n\n    event.preventDefault();\n    const content =  editorState\n    const query = `mutation createPost($title: String! , $content: String!) {\n            createPost(title: $title ,  content: $content ){\n                _id\n                title\n                content\n                date\n                relatedComment{\n                  commentContent\n                  commentCreator{\n                    displayName\n                  }\n                }\n                postCreator{\n                  displayName\n                }\n              \n              \n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: JSON.stringify({\n        query,\n        variables: { content, title },\n      }),\n\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        dispatch(addPost(res.data.data.createPost));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"create_post\">\n      <div className=\"container\">\n        <form className=\"create_post_form\" onSubmit={formOnSubmit}>\n          <label htmlFor=\"title\"> title </label>\n          <input\n            type=\"text\"\n            value={title}\n            name=\"title\"\n            onChange={formOnChange}\n          />\n          <label htmlFor=\"title\"> post content </label>\n          \n          <EditorComponent\n            className=\"editor\"\n            onEditorStateChange={onEditorStateChange}\n          />\n          <button>Add post</button>\n        </form>\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state, ownprops) => ({\n  token: tokenSelector(state),\n});\nexport default connect(mapStateToProps)(CreatePost);\n"]},"metadata":{},"sourceType":"module"}