{"ast":null,"code":"import axios from \"axios\";\nimport auth_types from \"./auth.types\";\nexport const sign_in_async = (email, password) => {\n  return dispatch => {\n    const query = `query{\n            login(email:\"${email}\" password:\"${password}\"  ){\n                token\n                tokenExpriration\n                email\n                displayName\n                userId\n\n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query\n      }\n    }).then(res => {\n      dispatch(sign_in_success(res.data.data.login));\n      console.log(res);\n    }).catch(err => {\n      console.log(err.response.data.errors[0].message);\n      dispatch(sign_in_fail(err.response.data.errors[0].message));\n    });\n  };\n};\n\nconst sign_in_success = authdata => {\n  return {\n    type: auth_types.SIGN_IN_SUCCESS,\n    payload: authdata\n  };\n};\n\nconst sign_in_fail = err => {\n  return {\n    type: auth_types.SIGN_IN_FAIL,\n    payload: err\n  };\n};\n\nexport const sign_out = () => {\n  return {\n    type: auth_types.SIGN_OUT\n  };\n};\n\nconst signUpAsync = (email, password) => {\n  return dispatch => {\n    const query = `mutation{\n            createUser(email:\"${email}\" password:\"${password}\"  ){\n                _id\n               \n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query\n      }\n    }).then(res => {\n      if (res) {}\n    });\n  };\n};","map":{"version":3,"sources":["/mnt/d/react&bac/genral-blog/frontend/src/redux/auth/auth.action.js"],"names":["axios","auth_types","sign_in_async","email","password","dispatch","query","url","method","data","then","res","sign_in_success","login","console","log","catch","err","response","errors","message","sign_in_fail","authdata","type","SIGN_IN_SUCCESS","payload","SIGN_IN_FAIL","sign_out","SIGN_OUT","signUpAsync"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChD,SAAQC,QAAD,IAAc;AACnB,UAAMC,KAAK,GAAI;2BACQH,KAAM,eAAcC,QAAS;;;;;;;;YADpD;AAUAJ,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAE,+BADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJH,QAAAA,KAAK,EAAEA;AADH;AAHF,KAAD,CAAL,CAOGI,IAPH,CAOSC,GAAD,IAAS;AACbN,MAAAA,QAAQ,CAACO,eAAe,CAACD,GAAG,CAACF,IAAJ,CAASA,IAAT,CAAcI,KAAf,CAAhB,CAAR;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,KAXH,EAYGK,KAZH,CAYUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAJ,CAAaT,IAAb,CAAkBU,MAAlB,CAAyB,CAAzB,EAA4BC,OAAxC;AACAf,MAAAA,QAAQ,CAACgB,YAAY,CAACJ,GAAG,CAACC,QAAJ,CAAaT,IAAb,CAAkBU,MAAlB,CAAyB,CAAzB,EAA4BC,OAA7B,CAAb,CAAR;AACD,KAfH;AAgBD,GA3BD;AA4BD,CA7BM;;AA8BP,MAAMR,eAAe,GAAIU,QAAD,IAAc;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEtB,UAAU,CAACuB,eADZ;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMD,YAAY,GAAIJ,GAAD,IAAS;AAC5B,SAAO;AACLM,IAAAA,IAAI,EAAEtB,UAAU,CAACyB,YADZ;AAELD,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALD;;AAMA,OAAO,MAAMU,QAAQ,GAAG,MAAM;AAC5B,SAAO;AACLJ,IAAAA,IAAI,EAAEtB,UAAU,CAAC2B;AADZ,GAAP;AAGD,CAJM;;AAMP,MAAMC,WAAW,GAAG,CAAC1B,KAAD,EAAQC,QAAR,KAAqB;AACvC,SAAQC,QAAD,IAAc;AACnB,UAAMC,KAAK,GAAI;gCACaH,KAAM,eAAcC,QAAS;;;;YADzD;AAMAJ,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAE,+BADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJH,QAAAA,KAAK,EAAEA;AADH;AAHF,KAAD,CAAL,CAMGI,IANH,CAMSC,GAAD,IAAS;AACf,UAAIA,GAAJ,EAAQ,CAAE;AACX,KARD;AASD,GAhBD;AAiBD,CAlBD","sourcesContent":["import axios from \"axios\";\nimport auth_types from \"./auth.types\";\nexport const sign_in_async = (email, password) => {\n  return (dispatch) => {\n    const query = `query{\n            login(email:\"${email}\" password:\"${password}\"  ){\n                token\n                tokenExpriration\n                email\n                displayName\n                userId\n\n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query,\n      },\n    })\n      .then((res) => {\n        dispatch(sign_in_success(res.data.data.login));\n\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err.response.data.errors[0].message);\n        dispatch(sign_in_fail(err.response.data.errors[0].message));\n      });\n  };\n};\nconst sign_in_success = (authdata) => {\n  return {\n    type: auth_types.SIGN_IN_SUCCESS,\n    payload: authdata,\n  };\n};\nconst sign_in_fail = (err) => {\n  return {\n    type: auth_types.SIGN_IN_FAIL,\n    payload: err,\n  };\n};\nexport const sign_out = () => {\n  return {\n    type: auth_types.SIGN_OUT,\n  };\n};\n\nconst signUpAsync = (email, password) => {\n  return (dispatch) => {\n    const query = `mutation{\n            createUser(email:\"${email}\" password:\"${password}\"  ){\n                _id\n               \n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query,\n      },\n    }).then((res) => {\n      if (res){}\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}