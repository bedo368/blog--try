{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/genral-blog/frontend/src/components/postcollection/postcollection.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Post from '../post/post';\nimport axios from \"axios\";\nimport { postsSelector } from \"../../redux/posts/post.selector\";\nimport { connect } from 'mongoose';\n\nfunction PostCollection() {\n  const [Posts, updatePosts] = useState([]);\n  const query = `query{\n        getAllPosts{\n          _id\n          title\n          content\n          date\n          relatedComment{\n            commentContent\n          }\n          postCreator{\n            displayName\n          }\n        }\n      }`;\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query\n      }\n    }).then(res => {\n      console.log(res.data.data.getAllPosts);\n      updatePosts(res.data.data.getAllPosts);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, Posts === null || Posts === void 0 ? void 0 : Posts.map(post => {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: post._id,\n      title: post.title,\n      Content: post.content,\n      date: post.date,\n      writer: post.postCreator.displayName,\n      comments: post.relatedComment.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }\n    });\n  }));\n}\n\nexport default connect(mapStateToProps)(PostCollection);","map":{"version":3,"sources":["/mnt/d/react&bac/genral-blog/frontend/src/components/postcollection/postcollection.jsx"],"names":["React","useState","useEffect","Post","axios","postsSelector","connect","PostCollection","Posts","updatePosts","query","url","method","data","then","res","console","log","getAllPosts","map","post","_id","title","content","date","postCreator","displayName","relatedComment","length","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,iCAA5B;AACA,SAASC,OAAT,QAAwB,UAAxB;;AACA,SAASC,cAAT,GAA0B;AAExB,QAAM,CAACC,KAAD,EAASC,WAAT,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEE,QAAMS,KAAK,GAAI;;;;;;;;;;;;;QAAf;AAgBER,EAAAA,SAAS,CAAC,MAAI;AACZE,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAC,+BADA;AAEJC,MAAAA,MAAM,EAAC,MAFH;AAGJC,MAAAA,IAAI,EAAC;AACDH,QAAAA,KAAK,EAAGA;AADP;AAHD,KAAD,CAAL,CAMCI,IAND,CAMMC,GAAG,IAAE;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAJ,CAASA,IAAT,CAAcK,WAA1B;AACET,MAAAA,WAAW,CAACM,GAAG,CAACF,IAAJ,CAASA,IAAT,CAAcK,WAAf,CAAX;AACH,KATC;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaF,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOV,KADP,aACOA,KADP,uBACOA,KAAK,CAAEW,GAAP,CAAWC,IAAI,IAAE;AAElB,wBAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAuB,MAAA,KAAK,EAAED,IAAI,CAACE,KAAnC;AAA2C,MAAA,OAAO,EAAEF,IAAI,CAACG,OAAzD;AAAkE,MAAA,IAAI,EAAGH,IAAI,CAACI,IAA9E;AAAqF,MAAA,MAAM,EAAEJ,IAAI,CAACK,WAAL,CAAiBC,WAA9G;AAA4H,MAAA,QAAQ,EAAEN,IAAI,CAACO,cAAL,CAAoBC,MAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEC,GAJA,CADP,CADJ;AAaH;;AAED,eAAetB,OAAO,CAACuB,eAAD,CAAP,CAA0BtB,cAA1B,CAAf","sourcesContent":["import React ,{ useState,useEffect } from 'react'\nimport Post from '../post/post'\nimport axios from \"axios\"\nimport {postsSelector} from \"../../redux/posts/post.selector\"\nimport { connect } from 'mongoose'\nfunction PostCollection() {\n     \n  const [Posts , updatePosts]= useState([])\n\n    const query = `query{\n        getAllPosts{\n          _id\n          title\n          content\n          date\n          relatedComment{\n            commentContent\n          }\n          postCreator{\n            displayName\n          }\n        }\n      }`\n\n\n      useEffect(()=>{\n        axios({\n          url:\"http://localhost:5000/graphql\",\n          method:\"POST\",\n          data:{\n              query : query\n          }\n      }).then(res=>{\n        console.log(res.data.data.getAllPosts);\n          updatePosts(res.data.data.getAllPosts)\n      })\n      },[])\n    \n    return (\n        <div className=\"post-collection\">\n              {Posts?.map(post=>{\n\n              return <Post key={post._id}   title={post.title}  Content={post.content} date ={post.date}  writer={post.postCreator.displayName}  comments={post.relatedComment.length} />\n\n              })}\n\n               \n               \n            \n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)( PostCollection)\n"]},"metadata":{},"sourceType":"module"}