{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/genral-blog/frontend/src/components/postcollection/postcollection.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Post from \"../post/post\";\nimport \"./postcollection.scss\";\nimport { postsSelector, isFitchingSelector } from \"../../redux/posts/post.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../withspiner.component/withspiner.component\";\n\nfunction PostCollection({\n  posts,\n  isFitching\n}) {\n  const [Posts, updatePosts] = useState([]);\n  useEffect(() => {\n    updatePosts(posts);\n  }, [isFitching]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postcollection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isFitching ? /*#__PURE__*/React.createElement(WithSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, Posts === null || Posts === void 0 ? void 0 : Posts.map(post => {\n    return /*#__PURE__*/React.createElement(Post, {\n      getpost: () => {\n        history.push(`post/${post._id}`);\n      },\n      key: post._id,\n      _id: post._id,\n      title: post.title,\n      Content: post.content.slice(0, 160),\n      date: post.date,\n      writer: post.postCreator.displayName,\n      comments: post.relatedComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    });\n  })));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  posts: postsSelector,\n  isFitching: isFitchingSelector\n});\nexport default connect(mapStateToProps)(PostCollection);","map":{"version":3,"sources":["/mnt/d/react&bac/genral-blog/frontend/src/components/postcollection/postcollection.jsx"],"names":["React","useState","useEffect","Post","postsSelector","isFitchingSelector","createStructuredSelector","connect","WithSpinner","PostCollection","posts","isFitching","Posts","updatePosts","map","post","history","push","_id","title","content","slice","date","postCreator","displayName","relatedComment","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,uBAAP;AACA,SACEC,aADF,EAEEC,kBAFF,QAGO,iCAHP;AAIA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;;AACA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA+C;AAC7C,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBZ,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAACH,KAAD,CAAX;AACD,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,UAAU,gBACV,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,gBAGV;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,aACGA,KADH,uBACGA,KAAK,CAAEE,GAAP,CAAYC,IAAD,IAAU;AACpB,wBACE,oBAAC,IAAD;AACA,MAAA,OAAO,EAAI,MAAI;AAAEC,QAAAA,OAAO,CAACC,IAAR,CAAc,QAAOF,IAAI,CAACG,GAAI,EAA9B;AAAkC,OADnD;AAEE,MAAA,GAAG,EAAEH,IAAI,CAACG,GAFZ;AAGE,MAAA,GAAG,EAAGH,IAAI,CAACG,GAHb;AAIE,MAAA,KAAK,EAAEH,IAAI,CAACI,KAJd;AAKE,MAAA,OAAO,EAAEJ,IAAI,CAACK,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAuB,GAAvB,CALX;AAME,MAAA,IAAI,EAAEN,IAAI,CAACO,IANb;AAOE,MAAA,MAAM,EAAEP,IAAI,CAACQ,WAAL,CAAiBC,WAP3B;AAQE,MAAA,QAAQ,EAAET,IAAI,CAACU,cARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD,GAbA,CADH,CAJJ,CADF;AA0BD;;AACD,MAAMC,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CI,EAAAA,KAAK,EAAEN,aADwC;AAE/CO,EAAAA,UAAU,EAAEN;AAFmC,CAAD,CAAhD;AAIA,eAAgBE,OAAO,CAACmB,eAAD,CAAP,CAA0BjB,cAA1B,CAAhB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Post from \"../post/post\";\nimport \"./postcollection.scss\"\nimport {\n  postsSelector,\n  isFitchingSelector,\n} from \"../../redux/posts/post.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../withspiner.component/withspiner.component\";\nfunction PostCollection({ posts, isFitching }) {\n  const [Posts, updatePosts] = useState([]);\n\n  useEffect(() => {\n    updatePosts(posts);\n  }, [isFitching]);\n\n  return (\n    <div className=\"postcollection\">\n      { isFitching ? (\n        <WithSpinner />\n      ) : (\n        <div className=\"post-collection\">\n          {Posts?.map((post) => {\n            return (\n              <Post\n              getpost = {()=>{ history.push(`post/${post._id}`) }}\n                key={post._id}\n                _id ={post._id}\n                title={post.title}\n                Content={post.content.slice(0 , 160)}\n                date={post.date}\n                writer={post.postCreator.displayName}\n                comments={post.relatedComment}\n              />\n            );\n          })}\n        </div>\n      )\n      \n      }\n    </div>\n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  posts: postsSelector,\n  isFitching: isFitchingSelector,\n});\nexport default  connect(mapStateToProps)( PostCollection);\n"]},"metadata":{},"sourceType":"module"}