{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/genral-blog/frontend/src/components/editor/editor.jsx\";\nimport React, { useState } from \"react\"; // import { Editor   } from \"react-draft-wysiwyg\";\n\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { Editor, EditorState } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nconst EditorComponent = ({ ...props\n}) => {\n  // const [uploadedImages, updateuploadedImages] = useState([]);\n  // const  uploadImageCallBack = async(file)=> {\n  //   // long story short, every time we upload an image, we\n  //   // need to save it to the state so we can get it's data\n  //   // later when we decide what to do with it.\n  //   // Make sure you have a uploadImages: [] as your default state\n  //   const imageObject = await {\n  //     file: file,\n  //     localSrc: URL.createObjectURL(file),\n  //   };\n  //   updateuploadedImages(uploadedImages.push(imageObject) );\n  //   console.log(uploadedImages);\n  //   // We need to return a promise with the image src\n  //   // the img src we will use here will be what's needed\n  //   // to preview it in the browser. This will be different than what\n  //   // we will see in the index.md file we generate.\n  //   return new Promise((resolve, reject) => {\n  //     resolve({ data: { link: imageObject.localSrc } });\n  //   });\n  // }\n  // return (\n  //   <Editor\n  //     {...props}\n  //     uploadEnabled={true}\n  //     placeholder=\"type your post\"\n  //     toolbar={{ image: { uploadCallback: uploadImageCallBack } }}\n  //   />\n  // );\n  const [editorState, setEditorState] = React.useState(() => EditorState.createEmpty());\n  return /*#__PURE__*/React.createElement(Editor, {\n    editorState: editorState,\n    onChange: setEditorState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default EditorComponent;","map":{"version":3,"sources":["/mnt/d/react&bac/genral-blog/frontend/src/components/editor/editor.jsx"],"names":["React","useState","Editor","EditorState","EditorComponent","props","editorState","setEditorState","createEmpty"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAO,kDAAP;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,UAAlC;AACA,OAAO,yBAAP;;AACA,MAAMC,eAAe,GAAI,CAAE,EAAE,GAAGC;AAAL,CAAF,KAAmB;AAC1C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACC,QAAN,CACpC,MAAME,WAAW,CAACK,WAAZ,EAD8B,CAAtC;AAIA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEF,WAArB;AAAkC,IAAA,QAAQ,EAAEC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxCD;;AA0CA,eAAeH,eAAf","sourcesContent":["import React, { useState } from \"react\";\n// import { Editor   } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport {Editor, EditorState} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nconst EditorComponent =  ( { ...props })=>  {\n  // const [uploadedImages, updateuploadedImages] = useState([]);\n  // const  uploadImageCallBack = async(file)=> {\n  //   // long story short, every time we upload an image, we\n  //   // need to save it to the state so we can get it's data\n  //   // later when we decide what to do with it.\n\n  //   // Make sure you have a uploadImages: [] as your default state\n  //   const imageObject = await {\n  //     file: file,\n  //     localSrc: URL.createObjectURL(file),\n  //   };\n\n  //   updateuploadedImages(uploadedImages.push(imageObject) );\n  //   console.log(uploadedImages);\n\n\n  //   // We need to return a promise with the image src\n  //   // the img src we will use here will be what's needed\n  //   // to preview it in the browser. This will be different than what\n  //   // we will see in the index.md file we generate.\n  //   return new Promise((resolve, reject) => {\n  //     resolve({ data: { link: imageObject.localSrc } });\n  //   });\n  // }\n\n  // return (\n  //   <Editor\n  //     {...props}\n  //     uploadEnabled={true}\n  //     placeholder=\"type your post\"\n  //     toolbar={{ image: { uploadCallback: uploadImageCallBack } }}\n  //   />\n  // );\n\n  const [editorState, setEditorState] = React.useState(\n    () => EditorState.createEmpty(),\n  );\n\n  return <Editor editorState={editorState} onChange={setEditorState} />;\n}\n\nexport default EditorComponent;\n"]},"metadata":{},"sourceType":"module"}