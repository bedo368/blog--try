{"ast":null,"code":"import POST_TYPES from \"./post.types\";\nimport axios from \"axios\";\n\nconst fitchPostsStart = () => {\n  return {\n    type: POST_TYPES.FITCH_POST_START\n  };\n};\n\nconst fitchPostsSuccess = postArray => {\n  return {\n    type: POST_TYPES.FITCH_POST_SUCSESS,\n    payload: postArray\n  };\n};\n\nconst fitchPostsFail = errMassage => {\n  return {\n    type: POST_TYPES.FITCH_POST_FAIL,\n    payload: errMassage\n  };\n};\n\nexport const fitchPostsAsync = () => {\n  return dispatch => {\n    dispatch(fitchPostsStart());\n    const query = `query{\n            getAllPosts{\n              _id\n              title\n              content\n              date\n              relatedComment{\n                commentContent\n                commentCreator{\n                  displayName\n                }\n              }\n              postCreator{\n                displayName\n              }\n            }\n          }`;\n    axios({\n      url: \"http://localhost:5000/graphql\",\n      method: \"POST\",\n      data: {\n        query: query\n      }\n    }).then(res => {\n      console.log(res.data.data.getAllPosts);\n      dispatch(fitchPostsSuccess(res.data.data.getAllPosts));\n    }).catch(err => {\n      dispatch(fitchPostsFail(err));\n    });\n  };\n};\nexport const addPost = post => {\n  return {\n    type: POST_TYPES.ADD_POST,\n    payload: post\n  };\n};\nexport const addComment = (postId, comment) => {\n  return {\n    type: POST_TYPES.ADD_COMMENT,\n    payload: {\n      postId,\n      comment\n    }\n  };\n};","map":{"version":3,"sources":["/media/bedo/E864D0B864D08B28/react&bac/genral-blog/frontend/src/redux/posts/post.action.js"],"names":["POST_TYPES","axios","fitchPostsStart","type","FITCH_POST_START","fitchPostsSuccess","postArray","FITCH_POST_SUCSESS","payload","fitchPostsFail","errMassage","FITCH_POST_FAIL","fitchPostsAsync","dispatch","query","url","method","data","then","res","console","log","getAllPosts","catch","err","addPost","post","ADD_POST","addComment","postId","comment","ADD_COMMENT"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACC,MAAMC,eAAe,GAAG,MAAI;AAEzB,SAAM;AAACC,IAAAA,IAAI,EAAGH,UAAU,CAACI;AAAnB,GAAN;AAEH,CAJA;;AAKD,MAAMC,iBAAiB,GAAIC,SAAD,IAAa;AAEnC,SAAO;AACHH,IAAAA,IAAI,EAAGH,UAAU,CAACO,kBADf;AAEHC,IAAAA,OAAO,EAAGF;AAFP,GAAP;AAIH,CAND;;AAOA,MAAMG,cAAc,GAAIC,UAAD,IAAc;AACjC,SAAM;AACFP,IAAAA,IAAI,EAAGH,UAAU,CAACW,eADhB;AAEFH,IAAAA,OAAO,EAAGE;AAFR,GAAN;AAIH,CALD;;AAOA,OAAO,MAAME,eAAe,GAAG,MAAI;AAG/B,SAAQC,QAAD,IAAY;AACfA,IAAAA,QAAQ,CAACX,eAAe,EAAhB,CAAR;AAEA,UAAMY,KAAK,GAAI;;;;;;;;;;;;;;;;YAAf;AAoBIb,IAAAA,KAAK,CAAC;AACJc,MAAAA,GAAG,EAAC,+BADA;AAEJC,MAAAA,MAAM,EAAC,MAFH;AAGJC,MAAAA,IAAI,EAAC;AACDH,QAAAA,KAAK,EAAGA;AADP;AAHD,KAAD,CAAL,CAMCI,IAND,CAMMC,GAAG,IAAE;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAJ,CAASA,IAAT,CAAcK,WAA1B;AACCT,MAAAA,QAAQ,CAACR,iBAAiB,CAACc,GAAG,CAACF,IAAJ,CAASA,IAAT,CAAcK,WAAf,CAAlB,CAAR;AACF,KATC,EASCC,KATD,CASOC,GAAG,IAAG;AACTX,MAAAA,QAAQ,CAACJ,cAAc,CAACe,GAAD,CAAf,CAAR;AACL,KAXC;AAcP,GArCD;AAsCH,CAzCM;AA2CP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAQ;AAC7B,SAAM;AACJvB,IAAAA,IAAI,EAAEH,UAAU,CAAC2B,QADb;AAEJnB,IAAAA,OAAO,EAAGkB;AAFN,GAAN;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,CAAEC,MAAF,EAAWC,OAAX,KAAqB;AAC7C,SAAM;AACJ3B,IAAAA,IAAI,EAAEH,UAAU,CAAC+B,WADb;AAEJvB,IAAAA,OAAO,EAAG;AAACqB,MAAAA,MAAD;AAAWC,MAAAA;AAAX;AAFN,GAAN;AAID,CALM","sourcesContent":["import POST_TYPES from \"./post.types\"\nimport axios from \"axios\"\n const fitchPostsStart = ()=>{\n\n    return{type : POST_TYPES.FITCH_POST_START }\n\n} \nconst fitchPostsSuccess = (postArray)=>{\n\n    return { \n        type : POST_TYPES.FITCH_POST_SUCSESS,\n        payload : postArray\n    }\n}\nconst fitchPostsFail = (errMassage)=>{\n    return{\n        type : POST_TYPES.FITCH_POST_FAIL,\n        payload : errMassage\n    }\n}\n\nexport const fitchPostsAsync = ()=>{\n\n\n    return (dispatch)=>{\n        dispatch(fitchPostsStart())\n\n        const query = `query{\n            getAllPosts{\n              _id\n              title\n              content\n              date\n              relatedComment{\n                commentContent\n                commentCreator{\n                  displayName\n                }\n              }\n              postCreator{\n                displayName\n              }\n            }\n          }`\n    \n    \n          \n            axios({\n              url:\"http://localhost:5000/graphql\",\n              method:\"POST\",\n              data:{\n                  query : query\n              }\n          }).then(res=>{\n            console.log(res.data.data.getAllPosts);\n             dispatch(fitchPostsSuccess(res.data.data.getAllPosts))\n          }).catch(err =>{  \n                dispatch(fitchPostsFail(err))\n          })\n       \n\n    }\n}\n\nexport const addPost = (post)=>{\n  return{\n    type: POST_TYPES.ADD_POST,\n    payload : post \n  }\n}\n\nexport const addComment = ( postId , comment)=>{\n  return{\n    type: POST_TYPES.ADD_COMMENT,\n    payload : {postId ,  comment }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}